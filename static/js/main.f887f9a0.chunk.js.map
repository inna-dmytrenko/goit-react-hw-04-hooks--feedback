{"version":3,"sources":["constants/fontSize.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["fontSize","Title","Aside","Section","title","children","defaultPros","ButtonClick","Button","nameBtn","handelCangeStatistics","onClick","type","FeedbackOptions","options","onLeaveFeedback","map","option","StatisticsTitle","Item","Statistics","good","neutral","bad","total","positivePercentage","Notification","NotificationMessage","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","prevState","Math","round","ReactDOM","render","StrictMode","theme","colors","white","black","document","getElementById"],"mappings":"yPAAaA,EACJ,GADIA,EAGJ,GCDF,IAAMC,EAAK,oDACHD,EADG,OAGLE,EAAK,yG,OCDZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACH,EAAD,WACE,cAACD,EAAD,UAAQG,IACPC,MAIPF,EAAQG,YAAc,CACpBF,MAAO,SAMMD,QChBFI,EAAW,kGAGTP,EAHS,oFCWTQ,EAXA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,sBACzB,OACE,cAACH,EAAD,CAAaI,QAAS,kBAAMD,EAAsBD,IAAUG,KAAK,SAAjE,SACGH,KCWQI,EAbS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,cAAC,EAAD,CAEER,QAASQ,EACTP,sBAAuBK,GAFlBE,OCJEC,EAAe,oDACblB,EADa,OAGfmB,EAAI,oDACFnB,EADE,yBCqBFoB,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACvB,EAAD,WACE,cAACgB,EAAD,yBAEA,+BACE,eAACC,EAAD,oBAAaE,KACb,eAACF,EAAD,uBAAgBG,KAChB,eAACH,EAAD,mBAAYI,KACZ,eAACJ,EAAD,qBAAcK,KACd,eAACL,EAAD,iCAA0BM,EAA1B,cCbD,IAAMC,EAAY,2ECGVC,MAHf,YAA2C,IAAZC,EAAW,EAAXA,QAC7B,OAAO,cAACF,EAAD,UAAeE,KCiDTC,EA9CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAiBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAK1B,OACE,eAAC,EAAD,CAASnB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEU,QAASqB,OAAOC,KAAK,CAAEf,OAAMC,UAASC,QACtCR,gBAzBwB,SAAAN,GAC5B,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,WAeDH,IAAuB,EACtB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAdCa,KAAKC,MAAOlB,EAAOa,IAAwB,OAiB9C,cAAC,EAAD,CAAcN,QAAS,0BCnC/BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MATL,CACZC,OAAQ,CACNC,MAAO,UACPC,MAAO,YAMP,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f887f9a0.chunk.js","sourcesContent":["export const fontSize = {\n  small: 20,\n  medium: 24,\n  large: 30,\n};\n","import styled from '@emotion/styled/macro';\nimport { fontSize } from '../../constants/fontSize';\nexport const Title = styled.h1`\n  font-size: ${fontSize.large}px;\n`;\nexport const Aside = styled.aside`\n  background-color: #add88a;\n  padding: 10px;\n`;\n","import React from 'react';\nimport { Title, Aside } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Aside>\n      <Title>{title}</Title>\n      {children}\n    </Aside>\n  );\n};\nSection.defaultPros = {\n  title: 'Title',\n};\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled/macro';\nimport { fontSize } from '../../constants/index';\n\nexport const ButtonClick = styled.button`\n  background-color: #137213;\n  margin-right: 5px;\n  font-size: ${fontSize.small}px;\n  text-transform: uppercase;\n  border-radius: 5px;\n  &:hover {\n    background-color: #ebf3eb;\n  }\n`;\n","import React from 'react';\nimport { ButtonClick } from './Button.styled';\nimport PropTypes from 'prop-types';\nconst Button = ({ nameBtn, handelCangeStatistics }) => {\n  return (\n    <ButtonClick onClick={() => handelCangeStatistics(nameBtn)} type=\"button\">\n      {nameBtn}\n    </ButtonClick>\n  );\n};\nButton.propTypes = {\n  nameBtn: PropTypes.string.isRequired,\n  handelCangeStatistics: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(option => (\n    <Button\n      key={option}\n      nameBtn={option}\n      handelCangeStatistics={onLeaveFeedback}\n    />\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import styled from '@emotion/styled/macro';\nimport { fontSize } from '../../constants/index';\n\nexport const StatisticsTitle = styled.h2`\n  font-size: ${fontSize.large}px;\n`;\nexport const Item = styled.li`\n  font-size: ${fontSize.small}px;\n  margin-bottom: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Aside } from '../Section/Section.styled';\nimport { StatisticsTitle, Item } from './Statistics.styled';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <Aside>\n      <StatisticsTitle>Statistics</StatisticsTitle>\n\n      <ul>\n        <Item>Good: {good}</Item>\n        <Item>Neutral: {neutral}</Item>\n        <Item>Bad: {bad}</Item>\n        <Item>Total: {total}</Item>\n        <Item>Positive feedbaks: {positivePercentage}%</Item>\n      </ul>\n    </Aside>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from '@emotion/styled/macro';\n\nexport const Notification = styled.p`\n  color: green;\n`;\n","import { Notification } from './Notification.styled';\n\nfunction NotificationMessage({ message }) {\n  return <Notification>{message}</Notification>;\n}\nexport default NotificationMessage;\n","import { useState } from 'react';\nimport Section from './components/Section/Section.jsx';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification.jsx';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handelCangeStatistics = nameBtn => {\n    switch (nameBtn) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n        options={Object.keys({ good, neutral, bad })}\n        onLeaveFeedback={handelCangeStatistics}\n      />\n      {countTotalFeedback() > 0 ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </Section>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport App from './App';\nconst theme = {\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}